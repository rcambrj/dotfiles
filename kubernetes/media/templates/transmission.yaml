apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
spec:
  revisionHistoryLimit: 1
  # do not specify replicas because cronjobs/enable-downloads changes this value
  # if this value is set then argocd will want to set it back after it drifts
  # replicas: 1
  strategy:
    type: Recreate # because hostPath volume
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
    spec:
      # TODO: do distributed storage then unlink workload from node
      nodeSelector:
        kubernetes.io/hostname: cranberry
      volumes:
      - name: gluetun-port-forwarding
        emptyDir:
      - name: transmission-config
        hostPath:
          path: /var/lib/transmission/.config/transmission-daemon
      - name: transmission-downloads
        hostPath:
          path: /var/lib/media/downloads/transmission
      initContainers:
      {{- with .Values.vpnsidecar }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      containers:
      - name: sync-forwarded-port
        image: lscr.io/linuxserver/transmission:4.0.6-r4-ls300
        env:
        - name: TR_AUTH
          value: "transmission:password"
        command: ["/bin/sh", "-c"]
        args:
        - |-
          set -e
          while true; do
            sleep 60;
            port=$(cat /gluetun-port-forwarding/port || echo 0)
            if [[ "$port" == 0 ]]; then
              continue
            fi
            transmission-remote --authenv --port $port
            echo "Updated with port: $port"
          done;
        volumeMounts:
        - name: gluetun-port-forwarding
          mountPath: /gluetun-port-forwarding
        resources:
          requests:
            cpu: "10m"
            memory: "2Mi"
          limits:
            cpu: "100m"
            memory: "10Mi"
      - name: transmission
        image: lscr.io/linuxserver/transmission:4.0.6-r4-ls300
        securityContext:
          runAsUser: 998
          runAsGroup: 998
        volumeMounts:
        - name: transmission-config
          mountPath: /config
        - name: transmission-downloads
          mountPath: /downloads
        ports:
        - name: http
          containerPort: 9091
        resources:
          # TODO: check resource usage when under heavy load
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "1"
            memory: "200Mi"
        startupProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
        livenessProbe:
          httpGet:
            path: /
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: transmission
spec:
  selector:
    app: transmission
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9091
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: transmission
spec:
  parentRefs:
    - namespace: kube-system
      name: traefik-gateway
  hostnames:
    - "transmission.media.cambridge.me"
  rules:
    # TODO: auth
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: transmission
          port: 80