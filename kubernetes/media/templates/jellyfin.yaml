apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      nodeSelector:
        gluster-volume-mounted: "true"
      volumes:
      - name: jellyfin-config
        hostPath:
          path: /data/jellyfin
      - name: ldap-ca
        configMap:
          name: ldap-ca
      - name: media
        hostPath:
          path: /data/media
      - name: transcodes
        emptyDir:
      - name: logs
        emptyDir:
      initContainers:
      - name: create-dirs
        image: busybox:1.37.0
        volumeMounts:
        - name: media
          mountPath: /data
        - name: logs
          mountPath: /config/log
        command: ["/bin/sh", "-c"]
        args:
          - |-
            mkdir -p /data/tvshows
            mkdir -p /data/movies
            chown -R 1000:1000 /data/*
            chown -R 1000:1000 /config/log
      containers:
      - name: jellyfin
        image: lscr.io/linuxserver/jellyfin:10.10.7ubu2404-ls68
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        volumeMounts:
        - name: jellyfin-config
          mountPath: /config
        - name: ldap-ca
          subPath: ca.pem
          mountPath: /ldap-ca.pem
        - name: media
          mountPath: /data
        - name: transcodes
          mountPath: /config/cache/transcodes
        - name: logs
          mountPath: /config/log
        ports:
        - name: http
          containerPort: 8096
        resources:
          requests:
            cpu: "200m"
            memory: "200Mi"
          limits:
            cpu: "2000m"
            memory: "2000Mi"
            gpu.intel.com/i915: "1"
        startupProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
        livenessProbe:
          httpGet:
            path: /health
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "jellyfin.home.cambridge.me"
    secretName: jellyfin-home-cambridge-me-tls
  ingressClassName: nginx
  rules:
  - host: jellyfin.home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              name: http