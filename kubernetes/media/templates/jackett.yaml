apiVersion: apps/v1
kind: Deployment
metadata:
  name: jackett
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate # because hostPath volume
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      # TODO: do distributed storage then unlink workload from node
      nodeSelector:
        kubernetes.io/hostname: cranberry
      volumes:
      - name: jackett
        hostPath:
          path: /var/lib/jackett/.config
      - name: gluetun-port-forwarding
        emptyDir:
      initContainers:
      {{- with .Values.vpnsidecar }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}
      containers:
      - name: jackett
        image: lscr.io/linuxserver/jackett:v0.22.2123-ls82
        securityContext:
          runAsUser: 998
          runAsGroup: 998
        volumeMounts:
        - name: jackett
          mountPath: /config
        ports:
        - name: http
          containerPort: 9117
        resources:
          requests:
            cpu: "50m"
            memory: "200Mi"
          limits:
            cpu: "200m"
            memory: "300Mi"
        startupProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
        livenessProbe:
          httpGet:
            path: /health
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: jackett
spec:
  selector:
    app: jackett
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9117
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jackett
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.auth.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.media.cambridge.me/oauth2/start"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "jackett.media.cambridge.me"
    secretName: jackett-media-cambridge-me-tls
  rules:
  - host: jackett.media.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jackett
            port:
              number: 80