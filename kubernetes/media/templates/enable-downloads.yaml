apiVersion: v1
kind: ServiceAccount
metadata:
  name: enable-downloads
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: enable-downloads
rules:
- apiGroups: ["apps"] # "" indicates the core API group
  resources: ["deployments"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: enable-downloads
subjects:
- kind: ServiceAccount
  name: enable-downloads
roleRef:
  kind: Role
  name: enable-downloads
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enable-downloads
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
      app: enable-downloads
  template:
    metadata:
      labels:
        app: enable-downloads
    spec:
      serviceAccountName: enable-downloads
      containers:
      - name: enable-downloads
        image: nixery.dev/shell/curl/gnugrep/jq
        command:
        - /bin/bash
        - -c
        - |-
          while true; do
            set -e

            APISERVER=https://kubernetes.default.svc
            SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
            NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
            TOKEN=$(cat ${SERVICEACCOUNT}/token)
            CACERT=${SERVICEACCOUNT}/ca.crt

            STATUSES=$(curl --no-progress-meter -m 5 http://192.168.142.1:6926/interfaces || true)
            echo "$STATUSES"

            # Interface status:
            #  interface wan is online 18h:41m:16s, uptime 19h:36m:50s and tracking is active
            #  interface wan_lte is online 18h:41m:16s, uptime 120h:47m:35s and tracking is active

            # Interface status:
            #  interface wan is offline and tracking is paused
            #  interface wan_lte is online 116h:58m:03s, uptime 116h:58m:07s and tracking is active

            if [[ $(echo "$STATUSES" | grep "Interface status" | wc -l) != "1" ]]; then
              echo Unable to determine WAN status, entering failsafe mode.
              WANONLINE=0
            else
              WANONLINE=$(echo "$STATUSES" | grep "interface wan is online" | wc -l)
            fi

            if [[ "${WANONLINE}" == "1" ]]; then
              echo "WAN is up." >&2
              REPLICAS=1
            else
              echo "WAN is not up." >&2
              REPLICAS=0
            fi

            echo Setting replicas to $REPLICAS

            DEPLOYMENTS=(jackett transmission nzbget)
            for DEPLOYMENT in ${DEPLOYMENTS[@]}; do
              echo "Setting ${DEPLOYMENT} replicas to ${REPLICAS}..."
              curl ${APISERVER}/apis/apps/v1/namespaces/${NAMESPACE}/deployments/${DEPLOYMENT} \
                -X PATCH --fail-with-body --no-progress-meter -m 5 \
                --cacert ${CACERT} \
                --header "Authorization: Bearer ${TOKEN}" \
                --header "Content-Type: application/strategic-merge-patch+json" \
                --data "{ \
                  \"apiVersion\": \"apps/v1\", \
                  \"kind\": \"Deployment\", \
                  \"metadata\": { \"name\": \"${DEPLOYMENT}\" }, \
                  \"spec\": { \"replicas\": ${REPLICAS} } \
                }" | jq ".status"
            done

            sleep 60
          done