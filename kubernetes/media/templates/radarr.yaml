apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate # because hostPath volume
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      # TODO: do distributed storage then unlink workload from node
      nodeSelector:
        kubernetes.io/hostname: cranberry
      volumes:
      - name: radarr-config
        hostPath:
          path: /var/lib/radarr/.config/Radarr
      - name: radarr-movies
        hostPath:
          path: /var/lib/media/movies
      - name: radarr-downloads
        hostPath:
          path: /var/lib/media/downloads
      containers:
      - name: radarr
        image: lscr.io/linuxserver/radarr:5.26.2.10099-ls277
        securityContext:
          runAsUser: 998
          runAsGroup: 998
        volumeMounts:
        - name: radarr-config
          mountPath: /config
        - name: radarr-movies
          mountPath: /movies
        - name: radarr-downloads
          mountPath: /downloads
        ports:
        - name: http
          containerPort: 7878
        resources:
          requests:
            cpu: "50m"
            memory: "200Mi"
          limits:
            cpu: "200m"
            memory: "300Mi"
        startupProbe:
          httpGet:
            path: /ping
            port: http
          failureThreshold: 20
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        livenessProbe:
          httpGet:
            path: /ping
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
spec:
  selector:
    app: radarr
  ports:
  - protocol: TCP
    port: 80
    targetPort: 7878
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: radarr
spec:
  parentRefs:
    - namespace: kube-system
      name: traefik-gateway
  hostnames:
    - "radarr.media.cambridge.me"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: radarr
          port: 80