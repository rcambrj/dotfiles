apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      nodeSelector:
        gluster-volume-mounted: true
      volumes:
      - name: sonarr-config
        hostPath:
          path: /data/sonarr
      - name: media
        hostPath:
          path: /data/media
      initContainers:
      - name: lock-logs-dir
        image: busybox
        volumeMounts:
        - name: sonarr-config
          mountPath: /config
        command: ["/bin/sh", "-c"]
        args:
          - |-
            mkdir -p /config/logs
            chmod 000 /config/logs
      containers:
      - name: sonarr
        image: lscr.io/linuxserver/sonarr:4.0.15.2941-ls287
        env:
        - name: TZ
          value: Europe/Amsterdam
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        volumeMounts:
        - name: sonarr-config
          mountPath: /config
        - name: media
          mountPath: /media
        ports:
        - name: http
          containerPort: 8989
        resources:
          requests:
            cpu: "50m"
            memory: "200Mi"
          limits:
            cpu: "200m"
            memory: "500Mi"
        startupProbe:
          httpGet:
            path: /ping
            port: http
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        livenessProbe:
          httpGet:
            path: /ping
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
spec:
  selector:
    app: sonarr
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.cambridge.me/oauth2/start"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "sonarr.home.cambridge.me"
    secretName: sonarr-home-cambridge-me-tls
  ingressClassName: nginx
  rules:
  - host: sonarr.home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 80
