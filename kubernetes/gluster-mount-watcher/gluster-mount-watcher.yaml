apiVersion: v1
kind: ServiceAccount
metadata:
  name: gluster-mount-watcher
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gluster-mount-watcher
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gluster-mount-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gluster-mount-watcher
subjects:
- kind: ServiceAccount
  name: gluster-mount-watcher
  namespace: gluster-mount-watcher
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gluster-mount-watcher
spec:
  selector:
    matchLabels:
      app: gluster-mount-watcher
  template:
    metadata:
      labels:
        app: gluster-mount-watcher
    spec:
      serviceAccountName: gluster-mount-watcher
      nodeSelector:
        gluster-volume-mount/configured: "true"
      tolerations:
      - key: gluster-volume-mount
        operator: Equal
        value: absent
        effect: NoExecute
      volumes:
      - name: data
        hostPath:
          path: /data
      containers:
      - name: gluster-mount-watcher
        image: bitnami/kubectl:1.33.4
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef: { fieldPath: spec.nodeName }
        command: ["/bin/sh","-c"]
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: true
        args:
        - |
          set -eu
          PROBE_FILE="/data/mounted"
          LABEL_KEY="gluster-volume-mount/ready"
          TAINT_KEY="gluster-volume-mount"

          current_state=""

          while true; do
            if [ -f "$PROBE_FILE" ]; then
              if [ "$current_state" != "healthy" ]; then
                echo "healthy"
                kubectl label node "$NODE_NAME" --overwrite "$LABEL_KEY=true"
                # errors if the taint is not there
                kubectl taint node "$NODE_NAME" --overwrite "$TAINT_KEY=absent:NoExecute"- || true
              fi

              current_state=healthy
            else
              if [ "$current_state" != "unhealthy" ]; then
                echo "unhealthy"
                kubectl label node "$NODE_NAME" --overwrite "$LABEL_KEY=false"
                # errors if the taint is already there
                kubectl taint node "$NODE_NAME" --overwrite "$TAINT_KEY=absent:NoExecute" || true
              fi

              current_state=unhealthy
            fi
            sleep 1
          done