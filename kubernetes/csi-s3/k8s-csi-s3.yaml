apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: csi-s3
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  finalizers:
  - wrangler.cattle.io/on-helm-chart-remove
spec:
  # https://github.com/yandex-cloud/k8s-csi-s3
  repo: https://yandex-cloud.github.io/k8s-csi-s3/charts
  chart: csi-s3
  version: v0.43.0
  targetNamespace: csi-s3
  createNamespace: true
  valuesContent: |-
    secret:
      create: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: test
spec:
  storageClassName: csi-s3
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  claimRef:
    namespace: csi-s3
    name: test
  csi:
    driver: ru.yandex.s3.csi
    # controllerPublishSecretRef:
    #   name: csi-s3-secret
    #   namespace: storage
    # nodePublishSecretRef:
    #   name: csi-s3-secret
    #   namespace: storage
    # nodeStageSecretRef:
    #   name: csi-s3-secret
    #   namespace: storage
    volumeAttributes:
      capacity: 100Mi
      # mounter: geesefs
      # options: --memory-limit 100 --dir-mode 0777 --file-mode 0666
    volumeHandle: test
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test
spec:
  # Empty storage class disables dynamic provisioning
  storageClassName: ""
  volumeName: test
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    app: test
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
    spec:
      volumes:
      - name: test
        persistentVolumeClaim:
          claimName: test
      containers:
      - name: test
        image: busybox
        command: ["/bin/sh", "-c"]
        args: [ "sleep 1d"]
        volumeMounts:
        - name: test
          mountPath: /test
