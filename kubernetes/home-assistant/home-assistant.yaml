apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  labels:
    app: home-assistant
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: home-assistant
  template:
    metadata:
      labels:
        app: home-assistant
    spec:
      nodeSelector:
        gluster-volume-mounted: "true"
        feature.node.kubernetes.io/usb-02_1cf1_0030.present: "true" # zigbee
      securityContext:
        supplementalGroups:
        - 27 # "video" group for generic-device-plugin
      volumes:
      - name: state
        hostPath:
          path: /data/home-assistant
      - name: configs
        emptyDir:
      - name: lldap-ha-auth
        emptyDir:
      - name: secrets
        secret:
          secretName: home-assistant
      - name: webos-dev-mode-curl
        secret:
          secretName: webos-dev-mode-curl
      initContainers:
      - name: create-configs
        image: nixos/nix:2.30.2
        volumeMounts:
        - name: configs
          mountPath: /configs
        - name: lldap-ha-auth
          mountPath: /lldap-ha-auth
        command: ["/bin/sh", "-c"]
        args:
        # this is quite janky and slow to start
        # TODO: use gh actions + ghcr, or a better alternative
        - |-
          set -ex
          nix build github:rcambrj/dotfiles#packages.x86_64-linux.home-assistant-config \
            --extra-experimental-features "flakes nix-command" \
            --accept-flake-config

          ls -lR result/
          cp -RL result/* /configs/
          ls -lR /configs/

          wget https://raw.githubusercontent.com/lldap/lldap/9ac96e8c6e4b015ee10ddcc978ece6da34d38911/example_configs/lldap-ha-auth.sh \
            --output-document /lldap-ha-auth/lldap-ha-auth.sh
          chmod +x /lldap-ha-auth/lldap-ha-auth.sh
      containers:
      - name: home-assistant
        image: homeassistant/home-assistant:2025.9.0.dev202508010256
        resources:
          requests:
            cpu: "50m"
            memory: "400Mi"
            squat.ai/zigbee: 1
          limits:
            cpu: "500m"
            memory: "600Mi"
            squat.ai/zigbee: 1
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        env:
        - name: TZ
          value: Europe/Amsterdam
        volumeMounts:
        - name: state
          mountPath: /config
        - name: configs
          subPath: configuration.yaml
          mountPath: /config/configuration.yaml
          readOnly: true
        - name: configs
          subPath: ui-lovelace.yaml
          mountPath: /config/ui-lovelace.yaml
          readOnly: true
        - name: lldap-ha-auth
          subPath: lldap-ha-auth.sh
          mountPath: /lldap-ha-auth.sh
          readOnly: true
        - name: secrets
          subPath: secrets.yaml
          mountPath: /config/secrets.yaml
          readOnly: true
        - name: webos-dev-mode-curl
          subPath: webos-dev-mode-curl
          mountPath: /webos-dev-mode-curl
        ports:
        - containerPort: 8123
        startupProbe:
          httpGet:
            path: /manifest.json
            port: 8123
        readinessProbe:
          httpGet:
            path: /manifest.json
            port: 8123
        livenessProbe:
          httpGet:
            path: /manifest.json
            port: 8123
---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
spec:
  selector:
    app: home-assistant
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8123
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "home.cambridge.me"
    secretName: home-cambridge-me-tls
  ingressClassName: nginx
  rules:
  - host: home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: home-assistant
            port:
              number: 80