apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  labels:
    app: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      volumes:
      - name: oauth2-proxy-config
        configMap:
          name: oauth2-proxy
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.9.0-amd64
        ports:
        - name: http
          containerPort: 4180
        args:
        - --config=/config/oauth2-proxy.cfg
        volumeMounts:
        - name: oauth2-proxy-config
          mountPath: /config
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: kubernetes-oauth2-proxy
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy
              key: cookie-secret
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy
data:
  oauth2-proxy.cfg: |-
    show_debug_on_error="true"
    http_address="0.0.0.0:4180"
    provider="oidc"
    reverse_proxy="true"
    approval_prompt="none" # default=force
    skip_provider_button="true"
    oidc_issuer_url="https://dex.home.cambridge.me"
    cookie_csrf_per_request="true"
    cookie_domains=[".cambridge.me"]
    whitelist_domains=[".cambridge.me"]
    email_domains=["*"]

    skip_oidc_discovery="true"
    # why disable OIDC discovery?
    # oauth2-proxy fetches info from .well-known/openid-configuration on dex
    # if dex is not up yet, oauth2-proxy will fail to come up too
    # fix this race by disabling discovery and declaring required settings here:
    oidc_jwks_url="https://dex.home.cambridge.me/keys"
    login_url="https://dex.home.cambridge.me/auth"
    redeem_url="https://dex.home.cambridge.me/token"
    validate_url="https://dex.home.cambridge.me/token/introspect"

    redirect_url="https://oauth2-proxy.home.cambridge.me/oauth2/callback"
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
spec:
  selector:
    app: oauth2-proxy
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "oauth2-proxy.home.cambridge.me"
    secretName: oauth2-proxy-home-cambridge-me-tls
  rules:
  - host: oauth2-proxy.home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy-vhosts
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  rules:
  - host: copyparty.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: esphome.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: jackett.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: landing.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: nzbget.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: radarr.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: sonarr.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
  - host: transmission.home.cambridge.me
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http