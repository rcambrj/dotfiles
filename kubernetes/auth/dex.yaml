apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    app: dex
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      volumes:
      - name: config-template
        configMap:
          name: dex-config
      - name: secrets
        secret:
          secretName: dex-secrets
      - name: ldap-ca
        configMap:
          name: ldap-ca
      - name: config
        emptyDir:
      initContainers:
      - name: create-configs
        image: hairyhenderson/gomplate:v4.3.3-alpine
        args: [
          "-d", "secrets=/secrets.yaml",
          "-f", "/config.tmpl",
          "-o", "/etc/dex/config.docker.yaml"
        ]
        volumeMounts:
        - name: config-template
          subPath: config.tmpl
          mountPath: /config.tmpl
        - name: secrets
          subPath: secrets.yaml
          mountPath: /secrets.yaml
        - name: config
          mountPath: /etc/dex
      containers:
      - name: dex
        image: ghcr.io/dexidp/dex:v2.43.1
        volumeMounts:
        - name: config
          mountPath: /etc/dex
        - name: ldap-ca
          subPath: ca.pem
          mountPath: /ldap-ca.pem
        ports:
        - name: http
          containerPort: 5556
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex-config
data:
  config.tmpl: |-
    # logger:
    #   level: debug
    #   format: text
    storage:
      type: memory
    issuer: https://dex.home.cambridge.me
    web:
      http: 0.0.0.0:5556
    oauth2:
      grantTypes:
      - authorization_code
      - refresh_token
      responseTypes:
      - code
      skipApprovalScreen: true
      alwaysShowLoginScreen: false
    connectors:
    - type: ldap
      id: ldap
      name: LDAP
      config:
        host: lldap.home.cambridge.me:6360
        insecureNoSSL: false
        insecureSkipVerify: true
        rootCA: /ldap-ca.pem
        bindDN: uid=admin-ro,ou=people,dc=cambridge,dc=me
        bindPW: {{ (datasource "secrets").ldap_admin_pass }}
        userSearch:
          baseDN: ou=people,dc=cambridge,dc=me
          username: uid
          idAttr: uid
          emailAttr: mail
          nameAttr: displayName
          preferredUsernameAttr: uid
        groupSearch:
          baseDN: ou=groups,dc=cambridge,dc=me
          filter: (objectClass=groupOfUniqueNames)
          userMatchers:
          - userAttr: DN
            groupAttr: member
          nameAttr: cn
    staticClients:
    - id: kubernetes-oauth2-proxy
      redirectURIs: [ "https://oauth2-proxy.home.cambridge.me/oauth2/callback" ]
      name: Kubernetes
      secret: {{ (datasource "secrets").app_secret_oauth2_proxy }}
    - id: argocd
      redirectURIs: [ "https://argocd.home.cambridge.me/auth/callback" ]
      name: Argo CD
      secret: {{ (datasource "secrets").app_secret_argocd }}
---
apiVersion: v1
kind: Service
metadata:
  name: dex
spec:
  selector:
    app: dex
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "dex.home.cambridge.me"
    secretName: dex-home-cambridge-me-tls
  rules:
  - host: dex.home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dex
            port:
              name: http
