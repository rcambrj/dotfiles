apiVersion: apps/v1
kind: Deployment
metadata:
  name: esphome
  labels:
    app: esphome
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: esphome
  template:
    metadata:
      labels:
        app: esphome
    spec:
      volumes:
      - name: config
        hostPath:
          path: /data/esphome
      - name: platformio
        hostPath:
          path: /data/esphome/.platformio
      - name: temp
        hostPath:
          path: /data/esphome/.temp
      containers:
      - name: esphome
        image: ghcr.io/esphome/esphome:2025.7
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        env:
        - name: ESPHOME_DASHBOARD_USE_PING
          value: "true"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: platformio
          mountPath: /.platformio
        - name: temp
          mountPath: /.temp
        ports:
        - name: http
          containerPort: 6052
---
apiVersion: v1
kind: Service
metadata:
  name: esphome
spec:
  selector:
    app: esphome
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: esphome
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.auth.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.cambridge.me/oauth2/start"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "esphome.home.cambridge.me"
    secretName: esphome-home-cambridge-me-tls
  rules:
  - host: esphome.home.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: esphome
            port:
              name: http