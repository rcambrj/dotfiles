apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: longhorn
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  finalizers:
  - wrangler.cattle.io/on-helm-chart-remove
spec:
  version: v1.9.0
  chart: longhorn
  repo: https://charts.longhorn.io
  # IMPORTANT! Ensure that spec.failurePolicy is set to “abort”. The only other value is the default: “reinstall”, which performs an uninstall of Longhorn. With “abort”, it retries periodically, giving the user a chance to fix the problem.
  failurePolicy: abort
  targetNamespace: longhorn-system
  createNamespace: true
  valuesContent: |-
    persistence.defaultClassReplicaCount: 1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.media.cambridge.me/oauth2/start"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - "longhorn.media.cambridge.me"
    secretName: longhorn-media-cambridge-me-tls
  ingressClassName: nginx
  rules:
  - host: longhorn.media.cambridge.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: longhorn-frontend
            port:
              number: 80
---
apiVersion: longhorn.io/v1beta2
kind: BackupTarget
metadata:
  name: longhorn-backup-b2
spec:
  backupTargetURL: s3://rcambrj-longhorn-backup@eu-central-003/
  credentialSecret: longhorn-backup-b2
# ---
# apiVersion: longhorn.io/v1beta2
# kind: RecurringJob
# metadata:
#   name: longhorn-backup-b2
# spec:
#   cron: "* * * * *"
#   task: "snapshot"
#   groups:
#   - default
#   - group1
#   retain: 1
#   concurrency: 2
#   labels:
#     label/1: a
#     label/2: b