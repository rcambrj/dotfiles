# apiVersion: helm.cattle.io/v1
# kind: HelmChart
# metadata:
#   name: grafana
#   finalizers:
#   - wrangler.cattle.io/on-helm-chart-remove
# spec:
#   # https://artifacthub.io/packages/helm/grafana/grafana
#   repo: https://grafana.github.io/helm-charts
#   chart: grafana
#   version: 9.3.1
#   targetNamespace: telemetry
#   createNamespace: true
#   valuesContent: |-
#     grafana.ini:
#       security:
#         disable_initial_admin_creation: true
#         secret_key: "$__file{${config.age.secrets.grafana-secret.path}}"
#       auth.basic:
#         enabled: false
#       auth.ldap:
#         config_file: /etc/grafana/ldap.toml
#     ldap:
#       enabled: true
#       existingSecret: grafana-ldap
# ---

#         servers: [{
#           host: "lldap.home.cambridge.me"
#           port: 6360
#           use_ssl: true
#           root_ca_cert: "TODO"
#           bind_dn: "uid=admin-ro,ou=people,dc=cambridge,dc=me"
#           bind_password: "$__file{${config.age-template.files.grafana-ldap-password.path}}"
#           search_filter: "(&(uid=%s)(memberof=cn=grafana,ou=groups,dc=cambridge,dc=me))"
#           search_base_dns: ["dc=cambridge,dc=me"]
#           attributes: {
#             member_of: "memberof"
#             email: "mail"
#             name: "displayName"
#             username: "uid"
#           group_mappings: [
#             {
#               group_dn: "cn=grafana_admin,ou=groups,dc=cambridge,dc=me"
#               org_role: "Admin"
#               grafana_admin: true
#             }
#             {
#               group_dn: "cn=grafana_editor,ou=groups,dc=cambridge,dc=me"
#               org_role: "Editor"
#             }
#             {
#               group_dn: "cn=grafana_viewer,ou=groups,dc=cambridge,dc=me"
#               org_role: "Viewer"
#             }
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: grafana
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt
#     nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.auth.svc.cluster.local/oauth2/auth"
#     nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.cambridge.me/oauth2/start"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#       - "grafana.home.cambridge.me"
#     secretName: grafana-home-cambridge-me-tls
#   rules:
#   - host: grafana.home.cambridge.me
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: grafana
#             port:
#               name: service